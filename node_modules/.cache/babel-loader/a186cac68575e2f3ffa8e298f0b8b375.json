{"ast":null,"code":"var _jsxFileName = \"/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx\";\nimport React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentList: [],\n      commentValue: \"\",\n      postFailMsg: \"\"\n    };\n\n    this.getComments = () => {\n      api.getCommentsByID(this.props.id).then(comments => {\n        this.setState({\n          commentList: comments\n        });\n      });\n    };\n\n    this.requestDelete = commentId => {\n      const newCommentList = this.state.commentList.filter(comment => comment.comment_id !== commentId);\n      this.setState({\n        commentList: newCommentList\n      });\n      api.deleteComment(commentId);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.commentValue === \"\") {\n        this.setState({\n          postFailMsg: \"Please enter a valid comment\"\n        });\n      } else if (this.props.user === \"\") {\n        this.setState({\n          postFailMsg: \"Please login to post a comment\"\n        });\n      } else {\n        api.postComment(this.props.id, this.props.user, this.state.commentValue).then(comment => {\n          this.setState(prev => {\n            return {\n              commentList: [comment, ...prev.commentList],\n              commentValue: \"\",\n              postFailMsg: \"\"\n            };\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        commentValue: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  render() {\n    console.log(this.props.user);\n    return React.createElement(StyledCommentBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: this.state.commentValue,\n      onChange: this.handleChange,\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButt\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\")), this.state.postFailMsg && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.postFailMsg), this.state.commentList.map(comment => React.createElement(CommentCard, {\n      key: comment.comment_id,\n      comment: comment,\n      requestDelete: this.requestDelete,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx"],"names":["React","api","StyledCommentBox","CommentCard","CommentBox","Component","state","commentList","commentValue","postFailMsg","getComments","getCommentsByID","props","id","then","comments","setState","requestDelete","commentId","newCommentList","filter","comment","comment_id","deleteComment","handleSubmit","event","preventDefault","user","postComment","prev","handleChange","target","value","componentDidMount","render","console","log","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  state = {\n    commentList: [],\n    commentValue: \"\",\n    postFailMsg : \"\"\n  };\n  componentDidMount() {\n    this.getComments();\n  }\n\n  getComments = () => {\n    api.getCommentsByID(this.props.id).then(comments => {\n      this.setState({ commentList: comments });\n    });\n  };\n  \n  requestDelete = commentId => {\n    const newCommentList = this.state.commentList.filter(comment => comment.comment_id !== commentId)\n    this.setState({commentList : newCommentList})\n    api.deleteComment(commentId);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.commentValue === \"\") {\n      this.setState({ postFailMsg: \"Please enter a valid comment\" })\n    }\n    else if (this.props.user === \"\") {\n      this.setState({ postFailMsg: \"Please login to post a comment\" })\n    }\n    else {\n      api\n        .postComment(this.props.id, this.props.user, this.state.commentValue)\n        .then(comment => {\n          this.setState(prev => {\n            return {\n              commentList: [comment, ...prev.commentList],\n              commentValue: \"\",\n              postFailMsg: \"\"\n            };\n          });\n        });\n    }\n  };\n  handleChange = event => {\n    this.setState({ commentValue: event.target.value });\n  };\n\n  render() {\n    console.log(this.props.user)\n    return (\n      <StyledCommentBox>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <textarea\n            value={this.state.commentValue}\n            onChange={this.handleChange}\n            className=\"comment\"\n          ></textarea>\n\n          <button className=\"submitButt\" type=\"submit\">\n            Submit\n          </button>\n          \n        </form>\n        {this.state.postFailMsg && <p>{this.state.postFailMsg}</p>}\n        {this.state.commentList.map(comment => (\n          <CommentCard\n            key={comment.comment_id}\n            comment={comment}\n            requestDelete={this.requestDelete}\n            user = {this.props.user}\n          />\n        ))}\n      </StyledCommentBox>\n    );\n  }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}