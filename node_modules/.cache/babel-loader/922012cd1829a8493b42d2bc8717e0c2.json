{"ast":null,"code":"var _jsxFileName = \"/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx\";\nimport React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentList: [],\n      username: this.props.user,\n      commentValue: \"\",\n      post\n    };\n\n    this.getComments = () => {\n      api.getCommentsByID(this.props.id).then(comments => {\n        this.setState({\n          commentList: comments\n        });\n      });\n    };\n\n    this.requestDelete = commentId => {\n      const newCommentList = this.state.commentList.filter(comment => comment.comment_id !== commentId);\n      this.setState({\n        commentList: newCommentList\n      });\n      api.deleteComment(commentId);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.state.commentValue === \"\") api.postComment(this.props.id, this.state.username, this.state.commentValue).then(comment => {\n        this.setState(prev => {\n          return {\n            commentList: [comment, ...prev.commentList],\n            commentValue: \"\"\n          };\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        commentValue: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  render() {\n    return React.createElement(StyledCommentBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: this.state.commentValue,\n      onChange: this.handleChange,\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButt\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\")), this.state.commentList.map(comment => React.createElement(CommentCard, {\n      key: comment.comment_id,\n      comment: comment,\n      requestDelete: this.requestDelete,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx"],"names":["React","api","StyledCommentBox","CommentCard","CommentBox","Component","state","commentList","username","props","user","commentValue","post","getComments","getCommentsByID","id","then","comments","setState","requestDelete","commentId","newCommentList","filter","comment","comment_id","deleteComment","handleSubmit","event","preventDefault","postComment","prev","handleChange","target","value","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  state = {\n    commentList: [],\n    username: this.props.user,\n    commentValue: \"\",\n    post\n  };\n  componentDidMount() {\n    this.getComments();\n  }\n\n  getComments = () => {\n    api.getCommentsByID(this.props.id).then(comments => {\n      this.setState({ commentList: comments });\n    });\n  };\n  \n  requestDelete = commentId => {\n    const newCommentList = this.state.commentList.filter(comment => comment.comment_id !== commentId)\n    this.setState({commentList : newCommentList})\n    api.deleteComment(commentId);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if(this.state.commentValue === \"\") \n    api\n      .postComment(this.props.id, this.state.username, this.state.commentValue)\n      .then(comment => {\n        this.setState(prev => {\n          return {\n            commentList: [comment, ...prev.commentList],\n            commentValue: \"\"\n          };\n        });\n      });\n  };\n  handleChange = event => {\n    this.setState({ commentValue: event.target.value });\n  };\n\n  render() {\n    return (\n      <StyledCommentBox>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <textarea\n            value={this.state.commentValue}\n            onChange={this.handleChange}\n            className=\"comment\"\n          ></textarea>\n\n          <button className=\"submitButt\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n        {this.state.commentList.map(comment => (\n          <CommentCard\n            key={comment.comment_id}\n            comment={comment}\n            requestDelete={this.requestDelete}\n            user = {this.props.user}\n          />\n        ))}\n      </StyledCommentBox>\n    );\n  }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}