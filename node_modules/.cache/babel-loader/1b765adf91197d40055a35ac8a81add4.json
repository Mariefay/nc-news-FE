{"ast":null,"code":"var _jsxFileName = \"/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx\";\nimport React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentList: [],\n      username: this.props.user,\n      commentValue: \"Type your comment here.\",\n      deleted: false\n    };\n\n    this.getComments = () => {\n      api.getCommentsByID(this.props.id).then(comments => {\n        this.setState({\n          commentList: comments\n        });\n      });\n    };\n\n    this.deleteComm = () => {\n      api.deleteComment(this.state.deleteId).then(() => this.setState({\n        commentList: []\n      }));\n    };\n\n    this.requestDelete = commentId => {\n      console.log(commentId);\n      this.deleteComm();\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      api.postComment(this.props.id, this.state.username, this.state.commentValue).then(comment => {\n        this.setState(prev => {\n          return {\n            commentList: [comment, ...prev.commentList],\n            commentValue: \"Type your comment here.\"\n          };\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        commentValue: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.deleted !== prevState.deleted) {\n      this.getComments();\n    }\n\n    ;\n    ;\n  }\n\n  render() {\n    console.log(this.state.deleteId);\n    return React.createElement(StyledCommentBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: this.state.commentValue,\n      onChange: this.handleChange,\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitButt\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\")), this.state.commentList.map(comment => React.createElement(CommentCard, {\n      key: comment.comment_id,\n      comment: comment,\n      requestDelete: this.requestDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/marie/Documents/Northcoders/FRONTEND/WEEK9/Nc-news/nc-news/src/Components/CommentBox.jsx"],"names":["React","api","StyledCommentBox","CommentCard","CommentBox","Component","state","commentList","username","props","user","commentValue","deleted","getComments","getCommentsByID","id","then","comments","setState","deleteComm","deleteComment","deleteId","requestDelete","commentId","console","log","handleSubmit","event","preventDefault","postComment","comment","prev","handleChange","target","value","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","comment_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as api from \"../api\";\nimport { StyledCommentBox } from \"./Styles/StyledCommentBox\";\nimport CommentCard from \"./CommentCard\";\n\nclass CommentBox extends React.Component {\n  state = {\n    commentList: [],\n    username: this.props.user,\n    commentValue: \"Type your comment here.\",\n    deleted: false\n  };\n  componentDidMount() {\n    this.getComments();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.deleted !== prevState.deleted\n    ) {\n        this.getComments()\n      };\n      ;\n    }\n  \n\n  getComments = () => {\n    api.getCommentsByID(this.props.id).then(comments => {\n      this.setState({ commentList: comments });\n    });\n  };\n  deleteComm = () => {\n    api.deleteComment(this.state.deleteId).then(()=>this.setState({commentList: []}))\n  \n  };\n  requestDelete = commentId => {\n    console.log(commentId);\n    this.deleteComm();\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    api\n      .postComment(this.props.id, this.state.username, this.state.commentValue)\n      .then(comment => {\n        this.setState(prev => {\n          return {\n            commentList: [comment, ...prev.commentList],\n            commentValue: \"Type your comment here.\"\n          };\n        });\n      });\n  };\n  handleChange = event => {\n    this.setState({ commentValue: event.target.value });\n  };\n\n  render() {\n    console.log(this.state.deleteId);\n    return (\n      <StyledCommentBox>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <textarea\n            value={this.state.commentValue}\n            onChange={this.handleChange}\n            className=\"comment\"\n          ></textarea>\n\n          <button className=\"submitButt\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n        {this.state.commentList.map(comment => (\n          <CommentCard\n            key={comment.comment_id}\n            comment={comment}\n            requestDelete={this.requestDelete}\n          />\n        ))}\n      </StyledCommentBox>\n    );\n  }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}